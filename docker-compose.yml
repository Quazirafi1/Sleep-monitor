version: "3"

services:

  blood-oxygen-level-service:
    container_name: ${BLOOD_OXYGEN_LEVELS_CONTAINER}
    build:
      context: ./Docker/BOL/
      dockerfile: Dockerfile
    image: blood-oxygen-levels:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  body-temperature-service:
    container_name: ${BODY_TEMPERATURE_CONTAINER}
    build:
      context: ./Docker/BT/
      dockerfile: Dockerfile
    image: body-temperature:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  eye-movement-service:
    container_name: ${EYE_MOVEMENT_CONTAINER}
    build:
      context: ./Docker/EM/
      dockerfile: Dockerfile
    image: eye-movement:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  hours-of-sleep-service:
    container_name: ${HOURS_OF_SLEEP_CONTAINER}
    build:
      context: ./Docker/HOS/
      dockerfile: Dockerfile
    image: hours-of-sleep:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  heart-rate-service:
    container_name: ${HEART_RATE_CONTAINER}
    build:
      context: ./Docker/HR/
      dockerfile: Dockerfile
    image: heart-rate:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  limb-movement-rate-service:
    container_name: ${LIMB_MOVEMENT_RATE_CONTAINER}
    build:
      context: ./Docker/LMR/
      dockerfile: Dockerfile
    image: limb-movement-rate:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  respiration-rate-service:
    container_name: ${RESPIRATION_RATE_CONTAINER}
    build:
      context: ./Docker/RR/
      dockerfile: Dockerfile
    image: respiration-rate:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  stress-levels-service:
    container_name: ${SRESS_LEVELS_CONTAINER}
    build:
      context: ./Docker/SL/
      dockerfile: Dockerfile
    image: stress-levels:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  snoring-range-service:
    container_name: ${SNORING_RANGE_CONTAINER}
    build:
      context: ./Docker/SR/
      dockerfile: Dockerfile
    image: snoring-range:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - mqtt

  node-red:
    restart: always
    depends_on:
      - mqtt
    image: nodered/node-red
    container_name: ${NODE_RED_CONTAINER}
    ports:
      - ${NODE_RED_PORT}:${NODE_RED_PORT}
    volumes: 
      - ./nodered/data:/data

  mqtt:
      image: toke/mosquitto
      container_name: ${MQTT_CONTAINER}
      ports:
        - ${MQTT_PORT}:${MQTT_PORT}
      restart: unless-stopped

  influxdb:
    image: influxdb:2.7.4
    container_name: ${INFLUXDB_CONTAINER}
    volumes:
      - ./influxdb-storage/data:/var/lib/influxdb2:rw
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    restart: on-failure:10
    ports:
      - ${INFLUXDB_PORT}:${INFLUXDB_PORT}

  telegraf:
    image: telegraf:1.19
    container_name: ${TELEGRAF_CONTAINER}
    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
    env_file:
      - .env
    depends_on:
      - influxdb
      - mqtt

  grafana:
    image: grafana/grafana-oss:8.4.3
    container_name: ${GRAFANA_CONTAINER}
    volumes:
      - ./grafana:/var/lib/grafana:rw
    depends_on:
      - influxdb
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}

# volumes:
#   grafana-storage:
#   influxdb-storage: